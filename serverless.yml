#Define Service Name and Provider
service: 
  name: CPEmailTask
provider:
  name: aws
  runtime: python3.7
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - "sns:Publish"
      Resource:
        - !Ref SNSTopic

#Define function and Environment Variables
functions:
  CPEmailTask:
    handler: main.lambda_handler
    events:
    - http:
        path: main.lambda_handler
        method: ANY 
        integration: lambda
        request:
            template:
              text/xhtml: '{ "stage" : "$context.stage" }'
              application/json: '{ "httpMethod" : "$context.httpMethod" }'
        response:
            headers:
              Access-Control-Allow-Origin: "'*'"
            statusCodes:
              200:
                template:
                  application/json: '{"application/json": "null"}'
    environment:
   MGMTHOSTNAME : 
      PASSWORD: 
      USER: 
      SNS_ARN: !Ref SNSTopic
      

#Define SNS Topic        
resources:
  Resources:
    SNSTopic:
       Type: AWS::SNS::Topic
       Properties:
         DisplayName: CPEmailTask
         TopicName: CPEmailTask
         Subscription:
           - Protocol: Email
   Endpoint : 

#DefinePlugins
plugins:
  - serverless-python-requirements
  - serverless-cloudguard-plugin

#Define Custom Parameters
custom:
 pythonRequirements:
   dockerizePip: non-linux
 cloudguard:
    fsp:
      Enabled: true
    proact:
      Enabled: true
      StoreJobReport: true
  
